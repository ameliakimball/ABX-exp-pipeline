dplyr::left_join(.,pairs_w_dist,
by=c("phone_1","phone_2","language_1"))%>%
dplyr::group_by(phone_1,phone_2,language_1) %>%
dplyr::sample_n(1)
same_pairs <- dplyr::filter(pairs_w_dist, target_other=="TGT")%>%
dplyr::filter(.,phone_1!="z"&phone_2!="z")%>%
dplyr::group_by(.,phone_1, phone_2, language_1) %>%
dplyr::sample_n(1)
full_filt_pairs<-dplyr::bind_rows(diff_pairs,same_pairs)
View(full_filt_pairs)
#!/usr/bin/env Rscript
#stimuli seleciton pipeline
#created by Amelia
#last edit 26 Nov by Amelia
#library(magrittr)
#library(readr)
#library(dplyr)
#takes the initial narrowed data frame of possible stimuli with acoustic
#distances and samples a subset  to form a dataframe of length
#144 (= desired number of trials). This new data frame of pairs is then made
#intro triplets, and then input into the optimization script a second time, to
#select the instances to use (which recording and which speaker)
`%>%` <- magrittr::`%>%`
# ARGS <-ARGS <- commandArgs(TRUE)
# Input triplet file
PAIRS <-"1_stimuli/distances_by_pair.csv" # ARGS[1] #
# Output filtered subset of these
OUTPUT <- "1_stimuli/exp_length_pairs.csv" #ARGS[2]#
pairs_w_dist <- readr::read_csv(PAIRS)
#English sounds the most variable between instances are b,z,d͡ʒ ɽʱ
#once these are removed, remove pairs with large mean distances
#after pairs are winnowed down,
#sample one of each phoneme pair
#use join to select triplets that match
filt_diff_pairs <-  dplyr::filter(pairs_w_dist, target_other=="OTH")%>%
dplyr::filter(.,phone_1!="z"&phone_2!="z")%>%
dplyr::filter(!(phone_1=="ɽʱ" & phone_2 == "d͡ʒ"))%>%
dplyr::filter(!(phone_1=="d͡ʒ"& phone_2 =="ɽʱ"))%>%
dplyr::group_by(.,phone_1, phone_2, language_1) %>%
dplyr::summarise(.,mean_dist = mean(distance))%>%
dplyr::filter(mean_dist < .375) %>%
dplyr::filter(.,language_1=="HIN") %>%
dplyr::select(phone_1,phone_2) %>%
dplyr::rename(. ,phone_HIN = phone_1, phone_ENG = phone_2) %>%
dplyr::ungroup(.)
#reorder phonemes so that they alternate which lang is first
filt_diff_pairs$language_1 <-NA
filt_diff_pairs$phone_1 <- NA
filt_diff_pairs$phone_2 <- NA
for (i in (1:nrow(filt_diff_pairs))) {
filt_diff_pairs$language_1[i] <- sample(c("HIN","ENG"),1)
}
for (i in (1:nrow(filt_diff_pairs))) {
filt_diff_pairs$phone_1[i]<- ifelse(filt_diff_pairs$language_1[i]=="HIN",
filt_diff_pairs$phone_HIN[i],
filt_diff_pairs$phone_ENG[i])
filt_diff_pairs$phone_2[i]<- ifelse(filt_diff_pairs$language_1[i]=="HIN",
filt_diff_pairs$phone_ENG[i],
filt_diff_pairs$phone_HIN[i])
}
diff_pairs <-dplyr::select(filt_diff_pairs,"phone_1","phone_2","language_1") %>%
dplyr::left_join(.,pairs_w_dist,
by=c("phone_1","phone_2","language_1"))%>%
dplyr::group_by(phone_1,phone_2,language_1) %>%
dplyr::sample_n(1)
same_pairs <- dplyr::filter(pairs_w_dist, target_other=="TGT")%>%
dplyr::filter(.,phone_1!="z"&phone_2!="z")%>%
dplyr::group_by(.,phone_1, phone_2, language_1) %>%
dplyr::sample_n(1)
full_filt_pairs<-dplyr::bind_rows(diff_pairs,same_pairs)
readr::write_csv(full_filt_pairs, OUTPUT)
library(readr)
distances_by_pair <- read_csv("1_stimuli/distances_by_pair.csv")
View(distances_by_pair)
library(readr)
triplets <- read_csv("1_stimuli/triplets.csv")
View(triplets)
length(distances_by_pair)
nrow(distances_by_pair)
table(distances_by_pair$target_other)
nrow(triplets)
`%>%` <- magrittr::`%>%`
# Input triplet file
PAIRS <-"1_stimuli/distances_by_pair.csv" # ARGS[1] #
# Output filtered subset of these
OUTPUT <- "1_stimuli/exp_length_pairs.csv" #ARGS[2]#
pairs_w_dist <- readr::read_csv(PAIRS)
# Input triplet file
PAIRS <-"1_stimuli/distances_by_pair.csv" # ARGS[1] #
# Output filtered subset of these
OUTPUT <- "1_stimuli/exp_length_pairs.csv" #ARGS[2]#
pairs_w_dist <- readr::read_csv(PAIRS)
filt_diff_pairs <-  dplyr::filter(pairs_w_dist, target_other=="OTH")%>%
dplyr::filter(.,phone_1!="z"&phone_2!="z")%>%
dplyr::filter(!(phone_1=="ɽʱ" & phone_2 == "d͡ʒ"))%>%
dplyr::filter(!(phone_1=="d͡ʒ"& phone_2 =="ɽʱ"))%>%
dplyr::group_by(.,phone_1, phone_2, language_1) %>%
dplyr::summarise(.,mean_dist = mean(distance))%>%
dplyr::filter(mean_dist < .375) %>%
dplyr::filter(.,language_1=="HIN") %>%
dplyr::select(phone_1,phone_2) %>%
dplyr::rename(. ,phone_HIN = phone_1, phone_ENG = phone_2) %>%
dplyr::ungroup(.)
filt_diff_pairs$language_1 <-NA
filt_diff_pairs$phone_1 <- NA
filt_diff_pairs$phone_2 <- NA
for (i in (1:nrow(filt_diff_pairs))) {
filt_diff_pairs$language_1[i] <- sample(c("HIN","ENG"),1)
}
`%>%` <- magrittr::`%>%`
# Input triplet file
PAIRS <-"1_stimuli/distances_by_pair.csv" # ARGS[1] #
`%>%` <- magrittr::`%>%`
#ARGS <-ARGS <- commandArgs(TRUE)
# Input triplet file
PAIRS <-"1_stimuli/distances_by_pair.csv" # ARGS[1] #
# Output filtered subset of these
OUTPUT <- "1_stimuli/exp_length_pairs.csv" #ARGS[2]#
pairs_w_dist <- readr::read_csv(PAIRS)
#English sounds the most variable between instances are b,z,d͡ʒ ɽʱ
#once these are removed, remove pairs with large mean distances
#after pairs are winnowed down,
#sample one of each phoneme pair
#use join to select triplets that match
filt_diff_pairs <-  dplyr::filter(pairs_w_dist, target_other=="OTH")%>%
dplyr::filter(.,phone_1!="z"&phone_2!="z")%>%
dplyr::filter(!(phone_1=="ɽʱ" & phone_2 == "d͡ʒ"))%>%
dplyr::filter(!(phone_1=="d͡ʒ"& phone_2 =="ɽʱ"))%>%
dplyr::group_by(.,phone_1, phone_2, language_1) %>%
dplyr::summarise(.,mean_dist = mean(distance))%>%
dplyr::filter(mean_dist < .375) %>%
dplyr::filter(.,language_1=="HIN") %>%
dplyr::select(phone_1,phone_2) %>%
dplyr::rename(. ,phone_HIN = phone_1, phone_ENG = phone_2) %>%
dplyr::ungroup(.)
#reorder phonemes so that they alternate which lang is first
filt_diff_pairs$language_1 <-NA
filt_diff_pairs$phone_1 <- NA
filt_diff_pairs$phone_2 <- NA
for (i in (1:nrow(filt_diff_pairs))) {
filt_diff_pairs$language_1[i] <- sample(c("HIN","ENG"),1)
}
for (i in (1:nrow(filt_diff_pairs))) {
filt_diff_pairs$phone_1[i]<- ifelse(filt_diff_pairs$language_1[i]=="HIN",
filt_diff_pairs$phone_HIN[i],
filt_diff_pairs$phone_ENG[i])
filt_diff_pairs$phone_2[i]<- ifelse(filt_diff_pairs$language_1[i]=="HIN",
filt_diff_pairs$phone_ENG[i],
filt_diff_pairs$phone_HIN[i])
}
diff_pairs <-dplyr::select(filt_diff_pairs,"phone_1","phone_2","language_1") %>%
dplyr::left_join(.,pairs_w_dist,
by=c("phone_1","phone_2","language_1"))%>%
dplyr::group_by(phone_1,phone_2,language_1) %>%
dplyr::sample_n(1)
#!/usr/bin/env Rscript
#stimuli seleciton pipeline
#created by Amelia
#last edit 26 Nov by Amelia
#library(magrittr)
#library(readr)
#library(dplyr)
#takes the initial narrowed data frame of possible stimuli with acoustic
#distances and samples a subset  to form a dataframe of length
#144 (= desired number of trials). This new data frame of pairs is then made
#intro triplets, and then input into the optimization script a second time, to
#select the instances to use (which recording and which speaker)
`%>%` <- magrittr::`%>%`
#ARGS <-ARGS <- commandArgs(TRUE)
# Input triplet file
PAIRS <-"1_stimuli/distances_by_pair.csv" # ARGS[1] #
# Output filtered subset of these
OUTPUT <- "1_stimuli/exp_length_pairs.csv" #ARGS[2]#
pairs_w_dist <- readr::read_csv(PAIRS)
#English sounds the most variable between instances are b,z,d͡ʒ ɽʱ
#once these are removed, remove pairs with large mean distances
#after pairs are winnowed down,
#sample one of each phoneme pair
#use join to select triplets that match
filt_diff_pairs <-  dplyr::filter(pairs_w_dist, target_other=="OTH")%>%
dplyr::filter(.,phone_1!="z"&phone_2!="z")%>%
dplyr::filter(!(phone_1=="ɽʱ" & phone_2 == "d͡ʒ"))%>%
dplyr::filter(!(phone_1=="d͡ʒ"& phone_2 =="ɽʱ"))%>%
dplyr::group_by(.,phone_1, phone_2, language_1) %>%
dplyr::summarise(.,mean_dist = mean(distance))%>%
dplyr::filter(mean_dist < .375) %>%
dplyr::filter(.,language_1=="HIN") %>%
dplyr::select(phone_1,phone_2) %>%
dplyr::rename(. ,phone_HIN = phone_1, phone_ENG = phone_2) %>%
dplyr::ungroup(.)
#reorder phonemes so that they alternate which lang is first
filt_diff_pairs$language_1 <-NA
filt_diff_pairs$phone_1 <- NA
filt_diff_pairs$phone_2 <- NA
for (i in (1:nrow(filt_diff_pairs))) {
filt_diff_pairs$language_1[i] <- sample(c("HIN","ENG"),1)
}
for (i in (1:nrow(filt_diff_pairs))) {
filt_diff_pairs$phone_1[i]<- ifelse(filt_diff_pairs$language_1[i]=="HIN",
filt_diff_pairs$phone_HIN[i],
filt_diff_pairs$phone_ENG[i])
filt_diff_pairs$phone_2[i]<- ifelse(filt_diff_pairs$language_1[i]=="HIN",
filt_diff_pairs$phone_ENG[i],
filt_diff_pairs$phone_HIN[i])
}
diff_pairs <-dplyr::select(filt_diff_pairs,"phone_1","phone_2","language_1") %>%
dplyr::left_join(.,pairs_w_dist,
by=c("phone_1","phone_2","language_1"))%>%
dplyr::group_by(phone_1,phone_2,language_1) %>%
dplyr::sample_n(1)
same_pairs <- dplyr::filter(pairs_w_dist, target_other=="TGT")%>%
dplyr::filter(.,phone_1!="z"&phone_2!="z")%>%
dplyr::group_by(.,phone_1, phone_2, language_1) %>%
dplyr::sample_n(1)
same_pairs <- dplyr::filter(pairs_w_dist, target_other=="TGT")%>%
dplyr::filter(.,phone_1!="z"&phone_2!="z")%>%
dplyr::group_by(.,phone_1, phone_2, language_1) %>%
dplyr::sample_n(2)
same_pairs <- dplyr::filter(pairs_w_dist, target_other=="TGT")%>%
dplyr::filter(.,phone_1!="z"&phone_2!="z")%>%
dplyr::group_by(.,phone_1, phone_2, language_1) %>%
dplyr::sample_n(6)
full_filt_pairs<-dplyr::bind_rows(diff_pairs,same_pairs)
readr::write_csv(full_filt_pairs, OUTPUT)
#!/usr/bin/env Rscript
#stimuli seleciton pipeline
#created by Amelia
#last edit 26 Nov by Amelia
#library(magrittr)
#library(readr)
#library(dplyr)
#takes the initial narrowed data frame of possible stimuli with acoustic
#distances and samples a subset  to form a dataframe of length
#144 (= desired number of trials). This new data frame of pairs is then made
#intro triplets, and then input into the optimization script a second time, to
#select the instances to use (which recording and which speaker)
`%>%` <- magrittr::`%>%`
#ARGS <-ARGS <- commandArgs(TRUE)
# Input triplet file
PAIRS <-"1_stimuli/distances_by_pair.csv" # ARGS[1] #
# Output filtered subset of these
OUTPUT <- "1_stimuli/exp_length_pairs.csv" #ARGS[2]#
pairs_w_dist <- readr::read_csv(PAIRS)
#English sounds the most variable between instances are b,z,d͡ʒ ɽʱ
#once these are removed, remove pairs with large mean distances
#after pairs are winnowed down,
#sample one of each phoneme pair
#use join to select triplets that match
filt_diff_pairs <-  dplyr::filter(pairs_w_dist, target_other=="OTH")%>%
dplyr::filter(.,phone_1!="z"&phone_2!="z")%>%
dplyr::filter(!(phone_1=="ɽʱ" & phone_2 == "d͡ʒ"))%>%
dplyr::filter(!(phone_1=="d͡ʒ"& phone_2 =="ɽʱ"))%>%
dplyr::group_by(.,phone_1, phone_2, language_1) %>%
dplyr::summarise(.,mean_dist = mean(distance))%>%
dplyr::filter(mean_dist < .375) %>%
dplyr::filter(.,language_1=="HIN") %>%
dplyr::select(phone_1,phone_2) %>%
dplyr::rename(. ,phone_HIN = phone_1, phone_ENG = phone_2) %>%
dplyr::ungroup(.)
#reorder phonemes so that they alternate which lang is first
filt_diff_pairs$language_1 <-NA
filt_diff_pairs$phone_1 <- NA
filt_diff_pairs$phone_2 <- NA
for (i in (1:nrow(filt_diff_pairs))) {
filt_diff_pairs$language_1[i] <- sample(c("HIN","ENG"),1)
}
for (i in (1:nrow(filt_diff_pairs))) {
filt_diff_pairs$phone_1[i]<- ifelse(filt_diff_pairs$language_1[i]=="HIN",
filt_diff_pairs$phone_HIN[i],
filt_diff_pairs$phone_ENG[i])
filt_diff_pairs$phone_2[i]<- ifelse(filt_diff_pairs$language_1[i]=="HIN",
filt_diff_pairs$phone_ENG[i],
filt_diff_pairs$phone_HIN[i])
}
diff_pairs <-dplyr::select(filt_diff_pairs,"phone_1","phone_2","language_1") %>%
dplyr::left_join(.,pairs_w_dist,
by=c("phone_1","phone_2","language_1"))%>%
dplyr::group_by(phone_1,phone_2,language_1) %>%
dplyr::sample_n(1)
readr::write_csv(diff_pairs, "diff_pairs_for_design.csv")
library(readr)
diff_pairs_for_design <- read_csv("2_validation/diff_pairs_for_design.csv")
View(diff_pairs_for_design)
`%>%`<-magrittr::`%>%`
hindi_des<-readr::read_csv("exp_design_hindi_144.csv")
hindi_des<-readr::read_csv("2_validation/exp_design_hindi_144.csv")
diff_pairs <- readr::read_csv("diff_pairs_for_design.csv")
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
View(diff_pairs)
#!/usr/bin/env Rscript
#stimuli seleciton pipeline
#created by Amelia
#last edit 26 Nov by Amelia
#library(magrittr)
#library(readr)
#library(dplyr)
#takes the initial narrowed data frame of possible stimuli with acoustic
#distances and samples a subset  to form a dataframe of length
#144 (= desired number of trials). This new data frame of pairs is then made
#intro triplets, and then input into the optimization script a second time, to
#select the instances to use (which recording and which speaker)
`%>%` <- magrittr::`%>%`
#ARGS <-ARGS <- commandArgs(TRUE)
# Input triplet file
PAIRS <-"1_stimuli/distances_by_pair.csv" # ARGS[1] #
# Output filtered subset of these
OUTPUT <- "1_stimuli/exp_length_pairs.csv" #ARGS[2]#
pairs_w_dist <- readr::read_csv(PAIRS)
#English sounds the most variable between instances are b,z,d͡ʒ ɽʱ
#once these are removed, remove pairs with large mean distances
#after pairs are winnowed down,
#sample one of each phoneme pair
#use join to select triplets that match
filt_diff_pairs <-  dplyr::filter(pairs_w_dist, target_other=="OTH")%>%
dplyr::filter(.,phone_1!="z"&phone_2!="z")%>%
dplyr::filter(!(phone_1=="ɽʱ" & phone_2 == "d͡ʒ"))%>%
dplyr::filter(!(phone_1=="d͡ʒ"& phone_2 =="ɽʱ"))%>%
dplyr::group_by(.,phone_1, phone_2, language_1) %>%
dplyr::summarise(.,mean_dist = mean(distance))%>%
dplyr::filter(mean_dist < .375) %>%
dplyr::filter(.,language_1=="HIN") %>%
dplyr::select(phone_1,phone_2) %>%
dplyr::rename(. ,phone_HIN = phone_1, phone_ENG = phone_2) %>%
dplyr::ungroup(.)
View(filt_diff_pairs)
readr::write_csv(filt_diff_pairs, "diff_pairs_for_design.csv")
warnings()
#!/usr/bin/env Rscript
#stimuli seleciton pipeline
#created by Amelia
#last edit 26 Nov by Amelia
#library(magrittr)
#library(readr)
#library(dplyr)
#takes the initial narrowed data frame of possible stimuli with acoustic
#distances and samples a subset  to form a dataframe of length
#144 (= desired number of trials). This new data frame of pairs is then made
#intro triplets, and then input into the optimization script a second time, to
#select the instances to use (which recording and which speaker)
`%>%` <- magrittr::`%>%`
#ARGS <-ARGS <- commandArgs(TRUE)
# Input triplet file
PAIRS <-"1_stimuli/distances_by_pair.csv" # ARGS[1] #
# Output filtered subset of these
OUTPUT <- "1_stimuli/exp_length_pairs.csv" #ARGS[2]#
pairs_w_dist <- readr::read_csv(PAIRS)
#English sounds the most variable between instances are b,z,d͡ʒ ɽʱ
#once these are removed, remove pairs with large mean distances
#after pairs are winnowed down,
#sample one of each phoneme pair
#use join to select triplets that match
filt_diff_pairs <-  dplyr::filter(pairs_w_dist, target_other=="OTH")%>%
dplyr::filter(.,phone_1!="z"&phone_2!="z")%>%
dplyr::filter(!(phone_1=="ɽʱ" & phone_2 == "d͡ʒ"))%>%
dplyr::filter(!(phone_1=="d͡ʒ"& phone_2 =="ɽʱ"))%>%
dplyr::group_by(.,phone_1, phone_2, language_1) %>%
dplyr::summarise(.,mean_dist = mean(distance))%>%
dplyr::filter(mean_dist < .375) %>%
dplyr::filter(.,language_1=="HIN") %>%
dplyr::select(phone_1,phone_2) %>%
dplyr::rename(. ,phone_HIN = phone_1, phone_ENG = phone_2) %>%
dplyr::ungroup(.)
readr::write_csv(filt_diff_pairs, "diff_pairs_for_design.csv")
`%>%`<-magrittr::`%>%`
hindi_des<-readr::read_csv("2_validation/exp_design_hindi_144.csv")
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
View(hindi_des)
View(diff_pairs)
View(diff_pairs)
diff_pairs <- dplyr::rename(phone_HIN = phone_NOTENG)
diff_pairs <- dplyr::rename(phone_NOTENG=phone_HIN)
diff_pairs_two <- dplyr::rename(diff_pairs, phone_NOTENG=phone_HIN)
View(diff_pairs_two)
new_des<- left_join(hindi_des,diff_pairs_two,by=phone_NOTENG)
new_des<- dplyr::left_join(hindi_des,diff_pairs_two,by=phone_NOTENG)
new_des<- dplyr::left_join(hindi_des,diff_pairs_two,by="phone_NOTENG")
#!/usr/bin/env Rscript
#author Amelia
`%>%`<-magrittr::`%>%`
hindi_des<-readr::read_csv("2_validation/exp_design_hindi_144.csv")
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
diff_pairs_two <- dplyr::rename(diff_pairs, Phone_NOTENG=phone_HIN)
new_des<- dplyr::left_join(hindi_des,diff_pairs_two,by="Phone_NOTENG")
View(new_des)
View(hindi_des)
View(hindi_des)
hindi_des<-readr::read_csv("2_validation/exp_design_hindi_144.csv")
hindi_des_two <- dplyr::group_by(Phone_NOTENG)%>%
dplyr::sample_n(1)
hindi_des<-readr::read_csv("2_validation/exp_design_hindi_144.csv")
hindi_des_two <- dplyr::group_by(hindi_des,Phone_NOTENG)%>%
dplyr::sample_n(1)
View(hindi_des_two)
new_des<- dplyr::left_join(diff_pairs_two,hindi_des_two,by="Phone_NOTENG")
#master df vars
EXPERIMENT_NAME<- "fake_grid"
#!/usr/bin/env Rscript
#author Amelia
`%>%`<-magrittr::`%>%`
hindi_des<-readr::read_csv("2_validation/exp_design_hindi_144.csv")
hindi_des_two <- dplyr::group_by(hindi_des,Phone_NOTENG)%>%
dplyr::sample_n(1)
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
diff_pairs_two <- dplyr::rename(diff_pairs, Phone_NOTENG=phone_HIN)
new_des<- dplyr::left_join(diff_pairs_two,hindi_des_two,by="Phone_NOTENG")
View(new_des)
View(new_des)
View(diff_pairs)
library(readr)
hindi_scores_single_label <- read_delim("2_validation/hindi_scores_single_label.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(hindi_scores_single_label)
hindi_scores_single_label <- read_delim("2_validation/hindi_scores_single_label.csv",
+     ";", escape_double = FALSE, trim_ws = TRUE)
hindi_scores_single_label <- read_delim("2_validation/hindi_scores_single_label.csv",
";", escape_double = FALSE, trim_ws = TRUE)
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
`%>%`<-magrittr::`%>%`
hindi_scores_single_label <- read_delim("2_validation/hindi_scores_single_label.csv",
";", escape_double = FALSE, trim_ws = TRUE)
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
diff_pairs_two <- dplyr::rename(diff_pairs, labels=phone_HIN)
new_des<- dplyr::left_join(diff_pairs_two,hindi_scores_single_label,
by="labels")
View(new_des)
library(readr)
hindi_scores_single_label_TAP_WRONG <- read_delim("2_validation/hindi_scores_single_label_TAP_WRONG.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(hindi_scores_single_label_TAP_WRONG)
`%>%`<-magrittr::`%>%`
hindi_scores_single_label <- read_delim("2_validation/hindi_scores_single_label_TAP_WRONG.csv",
";", escape_double = FALSE, trim_ws = TRUE)
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
diff_pairs_two <- dplyr::rename(diff_pairs, labels=phone_HIN)
new_des<- dplyr::left_join(diff_pairs_two,hindi_scores_single_label,
by="labels")
View(new_des)
#!/usr/bin/env Rscript
#author Amelia
`%>%`<-magrittr::`%>%`
hindi_scores_single_label <- read_delim("2_validation/hindi_scores_single_label_TAP_WRONG.csv",
";", escape_double = FALSE, trim_ws = TRUE)
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
diff_pairs_two <- dplyr::rename(diff_pairs, labels=phone_HIN)
new_des<- dplyr::left_join(diff_pairs_two,hindi_scores_single_label,
by="labels")
View(new_des)
`%>%`<-magrittr::`%>%`
hindi_scores_single_label <- read_delim("2_validation/hindi_scores_single_label_TAP_WRONG.csv",
";", escape_double = FALSE, trim_ws = TRUE)
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
`%>%`<-magrittr::`%>%`
hindi_scores_single_label <- read_delim("2_validation/hindi_scores_single_label_TAP_WRONG.csv",
";", escape_double = FALSE, trim_ws = TRUE)
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
diff_pairs_two <- dplyr::rename(diff_pairs, labels=Phone_NOTENG)
`%>%`<-magrittr::`%>%`
hindi_scores_single_label <- read_delim("2_validation/
hindi_scores_single_label_TAP_WRONG.csv",
";", escape_double = FALSE, trim_ws = TRUE)
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
diff_pairs_two <- dplyr::rename(diff_pairs,phone_HIN=Phone_NOTENG)
diff_pairs_two <- dplyr::rename(diff_pairs,Phone_NOTENG=phone_HIN)
View(diff_pairs_two)
`%>%`<-magrittr::`%>%`
hindi_scores_single_label <- read_delim("2_validation/
hindi_scores_single_label_TAP_WRONG.csv",
";", escape_double = FALSE, trim_ws = TRUE)
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
diff_pairs_two <- dplyr::rename(diff_pairs,Phone_NOTENG=phone_HIN, Phone_ENG=phone_ENG)
hindi_scores_single_label <- read_delim("2_validation/
hindi_scores_single_label_TAP_WRONG.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(hindi_scores_single_label)
hindi_scores_single_label <- read_delim("2_validation/hindi_scores_single_label_TAP_WRONG.csv",
";", escape_double = FALSE, trim_ws = TRUE)
hindi_scores_single_label <- read_delim("2_validation/hindi_scores_single_label_TAP_WRONG.csv",
";", escape_double = FALSE, trim_ws = TRUE)
hindi_scores <-dplyr::rename(hindi_scores_single_label,Phone_NOTENG=labels)
View(hindi_scores)
hindi_scores_single_label <- read_delim("2_validation/hindi_scores_single_label_TAP_WRONG.csv",
";", escape_double = FALSE, trim_ws = TRUE)
hindi_scores <-dplyr::rename(hindi_scores_single_label,Phone_NOTENG=labels)
diff_pairs <- readr::read_csv("2_validation/diff_pairs_for_design.csv")
diff_pairs_two <- dplyr::rename(diff_pairs,Phone_NOTENG=phone_HIN, Phone_ENG=phone_ENG)
new_des<- dplyr::left_join(diff_pairs_two,hindi_scores,
by="Phone_NOTENG")
View(new_des)
design_df <- new_des
num_trials = nrow(design_df)
NUM_SUBJS = 100
num_trials = nrow(design_df)
subjs<- c()
for (i in 1:NUM_SUBJS) {
subjs[i] = paste("subject",i,sep = "_")
}
trials <- c()
for (i in 1:num_trials){
trials[i] = paste("trial",i,sep = "_")
}
subs_trials <- expand.grid(trials,subjs)
names(subs_trials)<-c("subject","trial")
rep_design_df<- design_df %>% dplyr::slice(rep(dplyr::row_number(), NUM_SUBJS))
full_design <- dplyr::bind_cols(rep_design_df,subs_trials)
full_design$item <- NA
for (i in 1:nrow(full_design)) {
full_design$item[i] <- paste(full_design$Phone_NOTENG[i],full_design$Phone_ENG[i],sep = "_")
}
full_design$item <- as.factor(full_design$item)
#the below are dummy values, but must be present for the sampler to work.
full_design$response_var <- 1
View(full_design)
